[
  {
    "id": 1,
    "category": "Patrones de Diseño",
    "question": "¿Qué son los patrones de diseño en el desarrollo de software?",
    "options": ["Soluciones comprobadas para problemas comunes en el desarrollo de software.", "Herramientas para la gestión de proyectos de software.", "Métodos para la depuración de errores en el código."],
    "correctAnswer": "Soluciones comprobadas para problemas comunes en el desarrollo de software."
  },
  {
    "id": 2,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es la importancia de tener un nombre claro y conciso para un patrón de diseño?",
    "options": ["Facilita la identificación y búsqueda de información sobre el patrón.", "Aumenta la complejidad del patrón.", "Reduce la necesidad de documentación."],
    "correctAnswer": "Facilita la identificación y búsqueda de información sobre el patrón."
  },
  {
    "id": 3,
    "category": "Patrones de Diseño",
    "question": "¿Cuáles son los elementos esenciales de un patrón de diseño?",
    "options": ["Nombre, Área problemática, Solución, Consecuencias", "Nombre, Implementación, Solución, Consecuencias", "Nombre, Área problemática, Diseño, Consecuencias"],
    "correctAnswer": "Nombre, Área problemática, Solución, Consecuencias"
  },
  {
    "id": 4,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el enfoque principal de los patrones estructurales?",
    "options": ["La creación de objetos y el control de nuevas instancias.", "La composición de clases y objetos para crear estructuras más complejas.", "La interacción y comunicación entre objetos."],
    "correctAnswer": "La composición de clases y objetos para crear estructuras más complejas."
  },
  {
    "id": 5,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el enfoque principal de los patrones creacionales?",
    "options": ["La creación de objetos y el control de nuevas instancias.", "La composición de clases y objetos para crear estructuras más complejas.", "La interacción y comunicación entre objetos."],
    "correctAnswer": "La creación de objetos y el control de nuevas instancias."
  },
  {
    "id": 6,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el enfoque principal de los patrones de comportamiento?",
    "options": ["La creación de objetos y el control de nuevas instancias.", "La composición de clases y objetos para crear estructuras más complejas.", "La interacción y comunicación entre objetos."],
    "correctAnswer": "La interacción y comunicación entre objetos."
  },
  {
    "id": 7,
    "category": "Patrones de Diseño",
    "question": "¿Qué garantiza el patrón Singleton?",
    "options": ["Que una clase tenga múltiples instancias en todo el sistema.", "Que una clase solo tenga una instancia en todo el sistema.", "Que una clase no tenga instancias en el sistema."],
    "correctAnswer": "Que una clase solo tenga una instancia en todo el sistema."
  },
  {
    "id": 8,
    "category": "Patrones de Diseño",
    "question": "¿Qué permite el patrón Factory Method?",
    "options": ["Que las subclases decidan qué clase instanciar.", "Que una clase tenga múltiples instancias en todo el sistema.", "Que una clase no tenga instancias en el sistema."],
    "correctAnswer": "Que las subclases decidan qué clase instanciar."
  },
  {
    "id": 9,
    "category": "Patrones de Diseño",
    "question": "¿Cuáles son dos patrones fundamentales en los patrones creacionales?",
    "options": ["Singleton y Decorator", "Factory Method y Observer", "Singleton y Factory Method"],
    "correctAnswer": "Singleton y Factory Method"
  },
  {
    "id": 10,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el propósito principal del patrón Adaptador?",
    "options": ["Agregar funcionalidades adicionales a un objeto sin modificar su estructura básica.", "Crear una “traducción” entre las interfaces de dos clases no compatibles.", "Definir una interfaz para crear objetos."],
    "correctAnswer": "Crear una “traducción” entre las interfaces de dos clases no compatibles."
  },
  {
    "id": 11,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el propósito principal del patrón Decorator?",
    "options": ["Agregar funcionalidades adicionales a un objeto sin modificar su estructura básica.", "Crear una “traducción” entre las interfaces de dos clases no compatibles.", "Definir una interfaz para crear objetos."],
    "correctAnswer": "Agregar funcionalidades adicionales a un objeto sin modificar su estructura básica."
  },
  {
    "id": 14,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es un ejemplo de uso del patrón Observer?",
    "options": ["Una aplicación de redes sociales que notifica a los seguidores cuando un usuario publica una actualización.", "Una fábrica que crea objetos de diferentes tipos según el método de pago seleccionado.", "Una aplicación que agrega funcionalidades adicionales a un objeto sin modificar su estructura básica."],
    "correctAnswer": "Una aplicación de redes sociales que notifica a los seguidores cuando un usuario publica una actualización."
  },
  {
    "id": 15,
    "category": "Patrones de Diseño",
    "question": "¿Cuál es el propósito principal del patrón Strategy?",
    "options": ["Permitir que un objeto notifique a otros objetos cuando su estado cambia.", "Definir una interfaz para crear objetos.", "Definir una familia de algoritmos y encapsular cada uno en una clase."],
    "correctAnswer": "Definir una familia de algoritmos y encapsular cada uno en una clase."
  },
  {
    "id": 16,
    "category": "Arquitectura de Software",
    "question": "¿Qué es un patrón arquitectónico en el desarrollo de software?",
    "options": ["Una solución específica para un problema único en el diseño de software.", "Una solución general y reutilizable para problemas comunes en la estructura de un sistema de software.", "Un método para depurar errores en el código de software."],
    "correctAnswer": "Una solución general y reutilizable para problemas comunes en la estructura de un sistema de software."
  },
  {
    "id": 17,
    "category": "Arquitectura de Software",
    "question": "¿Qué es el modelo de arquitectura de n capas?",
    "options": ["Un estilo de diseño de software que divide una aplicación en capas lógicas y niveles físicos.", "Un método para depurar errores en el código de software.", "Una técnica para aumentar la complejidad del sistema."],
    "correctAnswer": "Un estilo de diseño de software que divide una aplicación en capas lógicas y niveles físicos."
  },
  {
    "id": 18,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es una de las funciones principales de las capas lógicas en una arquitectura en capas?",
    "options": ["Organizar las capas en diferentes niveles de interacción.", "Definir interfaces bien definidas para la interacción entre capas.", "Asignar responsabilidades específicas como la interfaz de usuario, la lógica de negocio o el acceso a datos."],
    "correctAnswer": "Asignar responsabilidades específicas como la interfaz de usuario, la lógica de negocio o el acceso a datos."
  },
  {
    "id": 19,
    "category": "Arquitectura de Software",
    "question": "¿Cómo se dividen las capas en una arquitectura de n capas?",
    "options": ["En capas lógicas y niveles físicos", "En capas de hardware y software", "En capas de presentación y almacenamiento"],
    "correctAnswer": "En capas lógicas y niveles físicos"
  },
  {
    "id": 20,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es la función principal de la capa de Presentación (UI) en una arquitectura de n capas?",
    "options": ["Implementar las reglas de negocio", "Interactuar con la base de datos", "Interactuar con el usuario"],
    "correctAnswer": "Interactuar con el usuario"
  },
  {
    "id": 21,
    "category": "Arquitectura de Software",
    "question": "¿Qué componentes típicos se encuentran en la capa de Acceso a Datos (DAL)?",
    "options": ["Formularios y botones", "Servicios y controladores", "Repositorios y mapeadores de datos"],
    "correctAnswer": "Repositorios y mapeadores de datos"
  },
  {
    "id": 22,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es el objetivo principal de la capa de Entidades (ET) en una arquitectura de n capas?",
    "options": ["Proporcionar una experiencia de usuario intuitiva", "Representar los objetos de datos utilizados en la aplicación", "Manejar la lógica de negocio"],
    "correctAnswer": "Representar los objetos de datos utilizados en la aplicación"
  },
  {
    "id": 23,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es un uso común de la arquitectura de repositorio?",
    "options": ["Sistemas de procesamiento en tiempo real", "Sistemas donde los datos son el centro, como bases de datos centralizadas", "Sistemas de control de versiones"],
    "correctAnswer": "Sistemas donde los datos son el centro, como bases de datos centralizadas"
  },
  {
    "id": 24,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es una característica clave de la arquitectura cliente-servidor?",
    "options": ["Los clientes y servidores operan de manera independiente sin necesidad de una red", "Los clientes solicitan servicios y los servidores responden a esas solicitudes a través de una red", "Los servidores solicitan servicios y los clientes responden a esas solicitudes"],
    "correctAnswer": "Los clientes solicitan servicios y los servidores responden a esas solicitudes a través de una red"
  },
  {
    "id": 25,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es la función principal de un servidor en una arquitectura cliente-servidor?",
    "options": ["Solicitar servicios a otros componentes del sistema", "Ofrecer servicios a otros componentes del sistema (los clientes)", "Operar de manera independiente sin interactuar con otros componentes"],
    "correctAnswer": "Ofrecer servicios a otros componentes del sistema (los clientes)"
  },
  {
    "id": 26,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es la función principal de un cliente en una arquitectura cliente-servidor?",
    "options": ["Ofrecer servicios a otros componentes del sistema", "Solicitar servicios a los servidores", "Operar de manera independiente sin interactuar con otros componentes"],
    "correctAnswer": "Solicitar servicios a los servidores"
  },
  {
    "id": 27,
    "category": "Arquitectura de Software",
    "question": "¿Cuál de las siguientes opciones describe mejor el papel de una red en una arquitectura cliente-servidor?",
    "options": ["Almacenar datos de manera centralizada", "Facilitar la comunicación entre clientes y servidores", "Ejecutar aplicaciones de manera independiente"],
    "correctAnswer": "Facilitar la comunicación entre clientes y servidores"
  },
  {
    "id": 28,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es el propósito de los filtros en una arquitectura de tuberías y filtros?",
    "options": ["Almacenar datos de manera centralizada", "Transformar los datos que reciben y pasarlos al siguiente filtro en la secuencia", "Conectar a los clientes y servidores"],
    "correctAnswer": "Transformar los datos que reciben y pasarlos al siguiente filtro en la secuencia"
  },
  {
    "id": 29,
    "category": "Arquitectura de Software",
    "question": "¿Cuál es el propósito de las tuberías en una arquitectura de tuberías y filtros?",
    "options": ["Almacenar datos de manera centralizada", "Conectar los filtros, permitiendo que los datos fluyan de uno a otro", "Transformar los datos que reciben y pasarlos al siguiente filtro en la secuencia"],
    "correctAnswer": "Conectar los filtros, permitiendo que los datos fluyan de uno a otro"
  },
  {
    "id": 30,
    "category": "Desarrollo de Software",
    "question": "¿Cuál es una estrategia que puede optimizar el proceso de implementación de software?",
    "options": ["Ignorar el diseño del software", "Reutilización de software", "Evitar la documentación del proyecto"],
    "correctAnswer": "Reutilización de software"
  },
  {
    "id": 31,
    "category": "Reutilización de Software",
    "question": "¿Cuáles son los niveles de reutilización de software vistos en clases?",
    "options": ["Nivel de Abstracción, Nivel Objeto, Nivel Componente, Nivel Sistema", "Nivel de Abstracción, Nivel Código, Nivel Componente, Nivel Aplicación", "Nivel Conceptual, Nivel Objeto, Nivel Componente, Nivel Sistema"],
    "correctAnswer": "Nivel de Abstracción, Nivel Código, Nivel Componente, Nivel Aplicación"
  },
  {
    "id": 32,
    "category": "Reutilización de Software",
    "question": "¿Qué implica el costo de búsqueda y evaluación en la reutilización de software?",
    "options": ["El tiempo y recursos necesarios para buscar y evaluar software o componentes reutilizables", "El costo de desarrollar software desde cero", "El costo de mantenimiento del software una vez implementado"],
    "correctAnswer": "El tiempo y recursos necesarios para buscar y evaluar software o componentes reutilizables"
  },
  {
    "id": 33,
    "category": "Reutilización de Software",
    "question": "¿Qué implica el costo de adaptación y configuración en la reutilización de software?",
    "options": ["El tiempo y recursos necesarios para buscar y evaluar software o componentes reutilizables", "El dinero pagado para adquirir software comercial o licencias necesarias", "El tiempo y esfuerzo para modificar o personalizar el software para que se ajuste a las necesidades específicas del proyecto"],
    "correctAnswer": "El tiempo y esfuerzo para modificar o personalizar el software para que se ajuste a las necesidades específicas del proyecto"
  },
  {
    "id": 34,
    "category": "Pruebas de Software",
    "question": "¿Cuál es el propósito principal de las pruebas de desarrollo?",
    "options": ["Desarrollar nuevas características para el software", "Verificar que el software cumple con los requisitos establecidos y detectar posibles errores o problemas", "Implementar el software en el entorno de producción"],
    "correctAnswer": "Verificar que el software cumple con los requisitos establecidos y detectar posibles errores o problemas"
  },
  {
    "id": 35,
    "category": "Pruebas de Software",
    "question": "¿Cuáles son los dos enfoques principales de las pruebas de desarrollo?",
    "options": ["Pruebas de integración y pruebas de sistema", "Pruebas de validación y pruebas de defectos", "Pruebas de rendimiento y pruebas de seguridad"],
    "correctAnswer": "Pruebas de validación y pruebas de defectos"
  },
  {
    "id": 36,
    "category": "Pruebas de Software",
    "question": "¿Cómo se apoyan mutuamente los enfoques de validación y de defectos en las pruebas de desarrollo?",
    "options": ["La validación y la búsqueda de defectos son procesos independientes que no se influyen mutuamente", "Mientras validas el software, puedes encontrar errores, y al buscar errores, puedes confirmar que el sistema funciona correctamente", "La validación se realiza solo después de que se han encontrado todos los defectos"],
    "correctAnswer": "Mientras validas el software, puedes encontrar errores, y al buscar errores, puedes confirmar que el sistema funciona correctamente"
  },
  {
    "id": 37,
    "category": "Pruebas de Software",
    "question": "¿Qué implica el propósito del software en relación con las pruebas?",
    "options": ["Cuanto más crítico sea el software, menos pruebas necesita", "Cuanto más crítico sea el software, más exhaustivas deben ser las pruebas de validación y defectos", "El propósito del software no afecta la cantidad de pruebas necesarias"],
    "correctAnswer": "Cuanto más crítico sea el software, más exhaustivas deben ser las pruebas de validación y defectos"
  },
  {
    "id": 38,
    "category": "Pruebas de Software",
    "question": "¿Cómo afectan las expectativas del usuario las pruebas de software?",
    "options": ["Las expectativas del usuario no afectan las pruebas de software", "Si se sabe que los usuarios esperan alta calidad, se deben realizar pruebas más rigurosas", "Las expectativas del usuario solo afectan el diseño del software, no las pruebas"],
    "correctAnswer": "Si se sabe que los usuarios esperan alta calidad, se deben realizar pruebas más rigurosas"
  },
  {
    "id": 39,
    "category": "Pruebas de Software",
    "question": "¿Cómo puede afectar el entorno de mercado las pruebas de software?",
    "options": ["Las pruebas siempre deben ser exhaustivas, independientemente del entorno de mercado", "En un entorno de mercado donde el precio es un factor importante, las pruebas pueden ser menos exhaustivas y los usuarios podrían aceptar más errores", "El entorno de mercado no afecta las pruebas de software"],
    "correctAnswer": "En un entorno de mercado donde el precio es un factor importante, las pruebas pueden ser menos exhaustivas y los usuarios podrían aceptar más errores"
  },
  {
    "id": 40,
    "category": "Pruebas de Software",
    "question": "¿Qué son las inspecciones de software?",
    "options": ["Pruebas que se realizan ejecutando el software", "Revisiones del código, diseños y requisitos del software sin ejecutarlo", "Pruebas de rendimiento del software en funcionamiento"],
    "correctAnswer": "Revisiones del código, diseños y requisitos del software sin ejecutarlo"
  },
  {
    "id": 41,
    "category": "Pruebas de Software",
    "question": "¿Cuál es una ventaja de las inspecciones de software sobre las pruebas?",
    "options": ["Solo pueden detectar un error a la vez", "Pueden encontrar varios errores al mismo tiempo y no requieren que el software esté completo", "Requieren que el software esté completamente terminado antes de comenzar"],
    "correctAnswer": "Pueden encontrar varios errores al mismo tiempo y no requieren que el software esté completo"
  },
  {
    "id": 42,
    "category": "Pruebas de Software",
    "question": "¿Cuál es el propósito principal de las pruebas de software?",
    "options": ["Desarrollar nuevas características para el software", "Identificar errores, fallos y problemas en el software antes de su lanzamiento", "Implementar el software en el entorno de producción"],
    "correctAnswer": "Identificar errores, fallos y problemas en el software antes de su lanzamiento"
  },
  {
    "id": 43,
    "category": "Pruebas de Software",
    "question": "¿Cuáles son los tres niveles principales de pruebas de software?",
    "options": ["Pruebas de integración, pruebas de aceptación, pruebas de rendimiento", "Pruebas de unidad, pruebas de componentes, pruebas de sistemas", "Pruebas de seguridad, pruebas de usabilidad, pruebas de compatibilidad"],
    "correctAnswer": "Pruebas de unidad, pruebas de componentes, pruebas de sistemas"
  },
  {
    "id": 44,
    "category": "Pruebas de Software",
    "question": "¿Qué se prueba en las pruebas de unidad?",
    "options": ["El sistema completo", "Partes pequeñas del software, como clases o métodos", "La interfaz de usuario"],
    "correctAnswer": "Partes pequeñas del software, como clases o métodos"
  },
  {
    "id": 45,
    "category": "Pruebas de Software",
    "question": "¿Qué se prueba en las pruebas de componentes?",
    "options": ["Partes pequeñas del software, como clases o métodos", "La interfaz de usuario", "Cómo se comunican entre sí las unidades para formar componentes más grandes"],
    "correctAnswer": "Cómo se comunican entre sí las unidades para formar componentes más grandes"
  },
  {
    "id": 46,
    "category": "Pruebas de Software",
    "question": "¿Qué se verifica en las pruebas de sistema?",
    "options": ["Partes pequeñas del software, como clases o métodos", "La interfaz de usuario", "Que todo el sistema funcione como se espera cuando todas las partes están integradas y se comuniquen correctamente"],
    "correctAnswer": "Que todo el sistema funcione como se espera cuando todas las partes están integradas y se comuniquen correctamente"
  },
  {
    "id": 47,
    "category": "Pruebas de Software",
    "question": "¿Qué implica el proceso de depuración (debugging) en el desarrollo de software?",
    "options": ["Añadir nuevas características al software", "Buscar la parte del código que está causando el error y corregirlo", "Ejecutar pruebas de rendimiento"],
    "correctAnswer": "Buscar la parte del código que está causando el error y corregirlo"
  },
  {
    "id": 48,
    "category": "Pruebas de Software",
    "question": "¿Qué se evalúa en las pruebas de caja blanca?",
    "options": ["El flujo de control, las decisiones lógicas y las rutas de ejecución dentro del sistema", "La interfaz de usuario y la experiencia del usuario", "La funcionalidad del software sin conocer su estructura interna"],
    "correctAnswer": "El flujo de control, las decisiones lógicas y las rutas de ejecución dentro del sistema"
  },
  {
    "id": 49,
    "category": "Pruebas de Software",
    "question": "¿Qué deben comprender los ingenieros de pruebas que trabajan con pruebas de caja blanca?",
    "options": ["El diseño de la interfaz de usuario", "El código y el diseño del sistema", "Las preferencias del usuario final"],
    "correctAnswer": "El código y el diseño del sistema"
  },
  {
    "id": 50,
    "category": "Pruebas de Software",
    "question": "¿Qué tipo de pruebas utilizan los equipos de control de calidad técnicos para encontrar errores ocultos que no se detectan con pruebas de caja negra?",
    "options": ["Pruebas de caja negra", "Pruebas de aceptación del usuario", "Pruebas de caja blanca"],
    "correctAnswer": "Pruebas de caja blanca"
  },
  {
    "id": 51,
    "category": "Pruebas de Software",
    "question": "¿Quién realiza las pruebas de versiones para verificar que el software funcione como se espera y cumpla con los requisitos?",
    "options": ["El equipo de desarrollo", "Un equipo independiente especializado en pruebas", "Los clientes o usuarios finales"],
    "correctAnswer": "Un equipo independiente especializado en pruebas"
  },
  {
    "id": 52,
    "category": "Pruebas de Software",
    "question": "¿Cuál es el objetivo principal de las pruebas de versión?",
    "options": ["Encontrar y corregir errores durante la creación del software", "Verificar que el software cumpla con los requisitos solicitados y esté listo para los usuarios", "Mejorar la interfaz de usuario del software"],
    "correctAnswer": "Verificar que el software cumpla con los requisitos solicitados y esté listo para los usuarios"
  },
  {
    "id": 53,
    "category": "Pruebas de Software",
    "question": "¿Qué se ignora en las pruebas de caja negra?",
    "options": ["Las entradas y salidas del sistema", "El comportamiento del software desde el exterior", "El código interno del sistema"],
    "correctAnswer": "El código interno del sistema"
  },
  {
    "id": 54,
    "category": "Pruebas de Software",
    "question": "¿En qué se centran las pruebas de caja negra?",
    "options": ["En cómo está construido el código interno del sistema", "En lo que el software hace, no en cómo lo hace", "En la estructura interna del software"],
    "correctAnswer": "En lo que el software hace, no en cómo lo hace"
  },
  {
    "id": 55,
    "category": "Pruebas de Software",
    "question": "¿Por qué están relacionadas las pruebas de versión con las pruebas de caja negra?",
    "options": ["Porque ambas se centran en la estructura interna del software", "Porque ambas evalúan si el software cumple con los requisitos establecidos y responde correctamente a las acciones del usuario", "Porque ambas requieren conocimiento del código fuente"],
    "correctAnswer": "Porque ambas evalúan si el software cumple con los requisitos establecidos y responde correctamente a las acciones del usuario"
  },
  {
    "id": 56,
    "category": "Pruebas de Software",
    "question": "¿Quién realiza las pruebas de usuario?",
    "options": ["Los desarrolladores del software", "Los usuarios finales o personas del equipo de marketing", "Los ingenieros de pruebas (testers técnicos)"],
    "correctAnswer": "Los usuarios finales o personas del equipo de marketing"
  },
  {
    "id": 57,
    "category": "Pruebas de Software",
    "question": "¿Cuáles son los tipos principales de pruebas de usuario?",
    "options": ["Pruebas alfa, pruebas beta, pruebas de aceptación", "Pruebas unitarias, pruebas de integración, pruebas de sistema", "Pruebas de caja blanca, pruebas de caja negra, pruebas de regresión"],
    "correctAnswer": "Pruebas alfa, pruebas beta, pruebas de aceptación"
  },
  {
    "id": 58,
    "category": "Pruebas de Software",
    "question": "¿Cuál es la principal diferencia entre las pruebas alfa y las pruebas beta?",
    "options": ["Las pruebas alfa se realizan en las oficinas de los desarrolladores, mientras que las pruebas beta se realizan en los entornos propios de los usuarios.", "Las pruebas alfa se centran en la interfaz de usuario, mientras que las pruebas beta se centran en la funcionalidad interna del software.", "Las pruebas alfa son realizadas por los usuarios finales, mientras que las pruebas beta son realizadas por los desarrolladores."],
    "correctAnswer": "Las pruebas alfa se realizan en las oficinas de los desarrolladores, mientras que las pruebas beta se realizan en los entornos propios de los usuarios."
  },
  {
    "id": 59,
    "category": "Pruebas de Software",
    "question": "¿Cuál es el objetivo principal de las pruebas de aceptación?",
    "options": ["Identificar mejoras durante el desarrollo", "Encontrar errores en el entorno del usuario antes del lanzamiento final", "Asegurar que el cliente esté satisfecho con el producto antes de su implementación completa"],
    "correctAnswer": "Asegurar que el cliente esté satisfecho con el producto antes de su implementación completa"
  },
  {
    "id": 60,
    "category": "Pruebas de Software",
    "question": "¿Cuál es una razón común para realizar cambios en un programa después de su lanzamiento?",
    "options": ["Para reducir el tamaño del equipo de desarrollo", "Para agregar nuevas características, corregir errores, o mejorar el sistema en función de la retroalimentación de los usuarios", "Para cambiar el nombre del software"],
    "correctAnswer": "Para agregar nuevas características, corregir errores, o mejorar el sistema en función de la retroalimentación de los usuarios"
  },
  {
    "id": 61,
    "category": "Pruebas de Software",
    "question": "¿Cómo se suelen discutir las mejoras en un enfoque informal?",
    "options": ["A través de reuniones formales y documentadas", "Mediante conversaciones directas entre desarrolladores y usuarios", "Utilizando herramientas automatizadas de gestión de proyectos"],
    "correctAnswer": "Mediante conversaciones directas entre desarrolladores y usuarios"
  },
  {
    "id": 62,
    "category": "Pruebas de Software",
    "question": "¿Qué implica el enfoque formal en la evolución del software?",
    "options": ["Realizar cambios sin documentación ni evaluación", "Documentar cada cambio propuesto, evaluar su impacto y costo, y luego decidir si se implementa", "Hacer cambios basados únicamente en la intuición de los desarrolladores"],
    "correctAnswer": "Documentar cada cambio propuesto, evaluar su impacto y costo, y luego decidir si se implementa"
  },
  {
    "id": 63,
    "category": "Pruebas de Software",
    "question": "¿Cuáles son las etapas del proceso de evolución del software?",
    "options": ["Peticiones de Cambio, Análisis del Impacto, Planeación de la Versión, Cambio de Implementación, Liberación del Sistema", "Diseño, Desarrollo, Pruebas, Implementación, Mantenimiento", "Requisitos, Diseño, Codificación, Pruebas, Mantenimiento"],
    "correctAnswer": "Peticiones de Cambio, Análisis del Impacto, Planeación de la Versión, Cambio de Implementación, Liberación del Sistema"
  },
  {
    "id": 64,
    "category": "Pruebas de Software",
    "question": "¿Cuál es el objetivo principal del proceso de evolución del software?",
    "options": ["Reducir el tamaño del equipo de desarrollo", "Mantener el software actualizado y relevante a las necesidades de los usuarios", "Cambiar el nombre del software"],
    "correctAnswer": "Mantener el software actualizado y relevante a las necesidades de los usuarios"
  },
  {
    "id": 65,
    "category": "Mantenimiento de Software",
    "question": "¿Qué incluye el mantenimiento del software?",
    "options": ["Solo la corrección de errores", "Solo la creación de nuevas características", "Tanto pequeños arreglos de errores como mejoras significativas para satisfacer nuevas necesidades"],
    "correctAnswer": "Tanto pequeños arreglos de errores como mejoras significativas para satisfacer nuevas necesidades"
  },
  {
    "id": 66,
    "category": "Mantenimiento de Software",
    "question": "¿Cuáles son los tipos de mantenimiento del software?",
    "options": ["Mantenimiento correctivo, mantenimiento adaptativo, mantenimiento perfectivo", "Mantenimiento preventivo, mantenimiento predictivo, mantenimiento reactivo", "Mantenimiento estructural, mantenimiento funcional, mantenimiento operativo"],
    "correctAnswer": "Mantenimiento correctivo, mantenimiento adaptativo, mantenimiento perfectivo"
  },
  {
    "id": 67,
    "category": "Mantenimiento de Software",
    "question": "¿Cuál es uno de los principales desafíos del mantenimiento del software?",
    "options": ["Reducir el tamaño del equipo de desarrollo", "Agregar nuevas funcionalidades después de que el software ya está en uso", "Cambiar el nombre del software"],
    "correctAnswer": "Agregar nuevas funcionalidades después de que el software ya está en uso"
  },
  {
    "id": 68,
    "category": "Mantenimiento de Software",
    "question": "¿Por qué es costoso agregar nuevas funcionalidades al software después de que ya está en uso?",
    "options": ["Porque los desarrolladores necesitan entender bien el sistema y analizar cómo los cambios afectarán al resto del software", "Porque es necesario cambiar el nombre del software", "Porque reduce el tamaño del equipo de desarrollo"],
    "correctAnswer": "Porque los desarrolladores necesitan entender bien el sistema y analizar cómo los cambios afectarán al resto del software"
  },
  {
    "id": 69,
    "category": "Mantenimiento de Software",
    "question": "¿Cuál es una estrategia para reducir los costos de mantenimiento del software?",
    "options": ["Aumentar la complejidad de los componentes", "Simplificar o sustituir componentes complejos", "Ignorar los problemas de mantenimiento"],
    "correctAnswer": "Simplificar o sustituir componentes complejos"
  },
  {
    "id": 70,
    "category": "Reingeniería de Software",
    "question": "¿Qué es la reingeniería de software?",
    "options": ["Un proceso para crear nuevos sistemas desde cero", "Un proceso para mejorar sistemas antiguos que son difíciles de mantener", "Un proceso para eliminar sistemas antiguos sin reemplazarlos"],
    "correctAnswer": "Un proceso para mejorar sistemas antiguos que son difíciles de mantener"
  },
  {
    "id": 71,
    "category": "Reingeniería de Software",
    "question": "¿Cuáles son los beneficios de la reingeniería de software?",
    "options": ["Aumentar la complejidad del sistema y dificultar su mantenimiento", "Mejorar la documentación, la estructura del software, actualizar el lenguaje de programación, y optimizar la organización de datos", "Eliminar la necesidad de realizar pruebas de usuario"],
    "correctAnswer": "Mejorar la documentación, la estructura del software, actualizar el lenguaje de programación, y optimizar la organización de datos"
  },
  {
    "id": 72,
    "category": "Reingeniería de Software",
    "question": "¿Cuáles son los beneficios de la reingeniería de software?",
    "options": ["Aumentar el riesgo y los costos", "Reducción del riesgo y reducción de costos", "Eliminar la necesidad de mantenimiento"],
    "correctAnswer": "Reducción del riesgo y reducción de costos"
  },
  {
    "id": 73,
    "category": "Reingeniería de Software",
    "question": "¿Cuál de las siguientes actividades implica convertir un programa de un lenguaje de programación antiguo a uno más moderno?",
    "options": ["Ingeniería inversa", "Traducción del código fuente", "Modularización del programa"],
    "correctAnswer": "Traducción del código fuente"
  },
  {
    "id": 74,
    "category": "Reingeniería de Software",
    "question": "¿Cuál de las siguientes actividades implica agrupar partes relacionadas del código y eliminar redundancias?",
    "options": ["Ingeniería inversa", "Modularización del programa", "Mantenimiento preventivo mediante refactorización"],
    "correctAnswer": "Modularización del programa"
  },
  {
    "id": 75,
    "category": "Reingeniería de Software",
    "question": "¿Qué es la refactorización?",
    "options": ["Un proceso continuo que se realiza durante el desarrollo del software para mejorar la estructura del código sin cambiar su comportamiento externo.", "Un proceso que se aplica a sistemas que ya han sido mantenidos por un tiempo y necesitan una transformación significativa.", "Un proceso de traducción del código de un lenguaje antiguo a uno moderno."],
    "correctAnswer": "Un proceso continuo que se realiza durante el desarrollo del software para mejorar la estructura del código sin cambiar su comportamiento externo."
  },
  {
    "id": 76,
    "category": "Reingeniería de Software",
    "question": "¿Qué es la reingeniería?",
    "options": ["Un proceso continuo que se realiza durante el desarrollo del software para mejorar la estructura del código sin cambiar su comportamiento externo.", "Un proceso que se aplica a sistemas que ya han sido mantenidos por un tiempo y necesitan una transformación significativa.", "Un proceso de traducción del código de un lenguaje antiguo a uno moderno."],
    "correctAnswer": "Un proceso que se aplica a sistemas que ya han sido mantenidos por un tiempo y necesitan una transformación significativa."
  },
  {
    "id": 77,
    "category": "Administración de Sistemas",
    "question": "¿Cuál de las siguientes tareas NO es parte de la administración de sistemas?",
    "options": ["Instalación y configuración de software y hardware", "Administración de redes y bases de datos", "Desarrollo de nuevas funcionalidades de software"],
    "correctAnswer": "Desarrollo de nuevas funcionalidades de software"
  },
  {
    "id": 78,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de las siguientes afirmaciones describe mejor un sistema heredado?",
    "options": ["Un sistema de software moderno con las últimas tecnologías y funcionalidades.", "Un sistema de software antiguo que sigue siendo utilizado por una organización, a pesar de estar desactualizado.", "Un sistema de software que se utiliza exclusivamente para pruebas y desarrollo."],
    "correctAnswer": "Un sistema de software antiguo que sigue siendo utilizado por una organización, a pesar de estar desactualizado."
  },
  {
    "id": 79,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de las siguientes opciones estratégicas implica seguir utilizando un sistema porque aún funciona bien y cumple con las necesidades de la empresa, realizando solo pequeños ajustes o reparaciones cuando es necesario?",
    "options": ["Desechar el sistema", "Realizar ingeniería inversa", "Mantener el sistema sin cambios"],
    "correctAnswer": "Mantener el sistema sin cambios"
  },
  {
    "id": 80,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de las siguientes opciones estratégicas implica hacer mejoras a un sistema que ya tiene algunos problemas o ha envejecido, pero sigue siendo útil?",
    "options": ["Sustituir el sistema", "Reingeniería del sistema", "Desechar el sistema"],
    "correctAnswer": "Reingeniería del sistema"
  },
  {
    "id": 81,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de los siguientes factores indica que un sistema tiene un valor bajo para la empresa?",
    "options": ["El sistema de registro en una universidad que solo se usa al principio del año, pero es crítico para inscribir a los estudiantes.", "Un software de ventas que solo permite formas de pago anticuadas y no se adapta a métodos modernos.", "Un sistema de compras en línea que se cae cada vez que hay muchas visitas, afectando las ventas."],
    "correctAnswer": "Un software de ventas que solo permite formas de pago anticuadas y no se adapta a métodos modernos."
  },
  {
    "id": 82,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de los siguientes factores podría disminuir el valor empresarial de un sistema?",
    "options": ["El sistema se usa poco, pero es esencial para procesos críticos.", "El sistema maneja procesos antiguos o que ya no funcionan bien.", "Las salidas del sistema son importantes y se utilizan frecuentemente."],
    "correctAnswer": "El sistema maneja procesos antiguos o que ya no funcionan bien."
  },
  {
    "id": 83,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de los siguientes factores podría dificultar el mantenimiento de la calidad de un sistema?",
    "options": ["El sistema tiene pocas peticiones de cambio y se mantiene estable.", "El sistema maneja un volumen de datos pequeño y bien gestionado.", "El sistema ha tenido muchas peticiones de cambio para adaptarse a nuevas leyes o requisitos."],
    "correctAnswer": "El sistema ha tenido muchas peticiones de cambio para adaptarse a nuevas leyes o requisitos."
  },
  {
    "id": 84,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de los siguientes aspectos podría indicar problemas de consistencia en un sistema?",
    "options": ["El sistema maneja grandes cantidades de datos, lo que aumenta la probabilidad de problemas de consistencia.", "El sistema tiene pocas interfaces de usuario, lo que facilita su mantenimiento.", "El sistema ha tenido pocas peticiones de cambio, manteniendo su estabilidad."],
    "correctAnswer": "El sistema maneja grandes cantidades de datos, lo que aumenta la probabilidad de problemas de consistencia."
  },
  {
    "id": 85,
    "category": "Sistemas Heredados",
    "question": "¿Cuál de los siguientes aspectos podría influir en la decisión de mantener o reemplazar un sistema heredado por razones no técnicas?",
    "options": ["La cantidad de interfaces de usuario del sistema.", "La cantidad de datos que maneja el sistema.", "Las cuestiones políticas o de presupuesto dentro de la organización."],
    "correctAnswer": "Las cuestiones políticas o de presupuesto dentro de la organización."
  }
]
